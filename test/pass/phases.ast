cycle phase B {
    passes {
        SomePass, SomeTrav
    }
};

phase A {
    info = "Some phase that does A",
    subphases {
        B
    }
};

phase D {
    subphases {
        A
    }
};

phase C {
    subphases {
        D
    }
};

phase RootPhase {
    subphases {
        C, D
    }
};



pass SomePass {
    func = doSomePass  // -> pass_doSomePass_entry() in doSomePass.h
};

traversal SomeTrav {
    func = doSomeTrav // -> trav_doSomeTrav_entry() in doSomeTrav.h
};


traversal SOT {
    func = SomeOtherTrav // -> trav_SomeOtherTrav_entry() in SomeOtherTrav.h
    nodes {
        A, B
    }
};


root node RootNode { attributes { int a } };
